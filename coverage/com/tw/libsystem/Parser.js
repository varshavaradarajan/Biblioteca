var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":46,"id":1316,"methods":[{"el":12,"sc":5,"sl":9},{"el":45,"sc":5,"sl":14}],"name":"Parser","sl":4}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_105":{"methods":[{"sl":9},{"sl":14}],"name":"shouldReturnInvalidCommandAsOperationForInvalidInput","pass":true,"statements":[{"sl":10},{"sl":11},{"sl":15},{"sl":16},{"sl":21},{"sl":26},{"sl":32},{"sl":38}]},"test_118":{"methods":[{"sl":9},{"sl":14}],"name":"shouldReturnAnOperationOnParsingTheInput","pass":true,"statements":[{"sl":10},{"sl":11},{"sl":15},{"sl":16},{"sl":17},{"sl":18}]},"test_188":{"methods":[{"sl":9},{"sl":14}],"name":"shouldReturnInvalidCommandIfInputIsEmpty","pass":true,"statements":[{"sl":10},{"sl":11},{"sl":15},{"sl":43}]},"test_202":{"methods":[{"sl":9}],"name":"shouldReturnNewParserObject","pass":true,"statements":[{"sl":10},{"sl":11}]},"test_213":{"methods":[{"sl":9},{"sl":14}],"name":"shouldReturnCheckOutAsOperationOnParsingInputValue2","pass":true,"statements":[{"sl":10},{"sl":11},{"sl":15},{"sl":16},{"sl":21},{"sl":22},{"sl":23}]},"test_43":{"methods":[{"sl":9},{"sl":14}],"name":"shouldReturnCheckInAsOperationOnParsingInputValue3","pass":true,"statements":[{"sl":10},{"sl":11},{"sl":15},{"sl":16},{"sl":21},{"sl":26},{"sl":27},{"sl":28},{"sl":29}]},"test_603":{"methods":[{"sl":9},{"sl":14}],"name":"shouldReturnInvalidIfInputLengthIsMoreThanOne","pass":true,"statements":[{"sl":10},{"sl":11},{"sl":15},{"sl":43}]},"test_64":{"methods":[{"sl":9},{"sl":14}],"name":"shouldReturnExitApplicationAsOperationOnParsingInputValue4","pass":true,"statements":[{"sl":10},{"sl":11},{"sl":15},{"sl":16},{"sl":21},{"sl":26},{"sl":32},{"sl":33},{"sl":34}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [118, 213, 188, 43, 64, 603, 202, 105], [118, 213, 188, 43, 64, 603, 202, 105], [118, 213, 188, 43, 64, 603, 202, 105], [], [], [118, 213, 188, 43, 64, 603, 105], [118, 213, 188, 43, 64, 603, 105], [118, 213, 43, 64, 105], [118], [118], [], [], [213, 43, 64, 105], [213], [213], [], [], [43, 64, 105], [43], [43], [43], [], [], [64, 105], [64], [64], [], [], [], [105], [], [], [], [], [188, 603], [], [], []]
